CREATE TABLE  PRODUTOS (
PRD_ID NUMBER PRIMARY KEY,
NOME VARCHAR(50),
PRD_QD_ESTOQUE NUMBER,
PRD_ESTOQUE_MIM NUMBER,
PRD_DATA_FABRICACAO DATE,
PRD_PERECÍVEL VARCHAR(50),
PRD_VALOR DECIMAL(10,2),
PRD_MARCA_ID NUMBER
);

INSERT INTO PRODUTOS (PRD_ID, NOME, PRD_QD_ESTOQUE, PRD_ESTOQUE_MIM, PRD_DATA_FABRICACAO, PRD_PERECÍVEL, PRD_VALOR, PRD_MARCA_ID) 
VALUES (1, 'Banana', 100, 50, TO_DATE('22-11-03', 'YYYY-MM-DD'), 'SIM', 5.00, 1);

INSERT INTO PRODUTOS (PRD_ID, NOME, PRD_QD_ESTOQUE, PRD_ESTOQUE_MIM, PRD_DATA_FABRICACAO, PRD_PERECÍVEL, PRD_VALOR, PRD_MARCA_ID) 
VALUES (2, 'Maçã', 75, 40, TO_DATE('2023-10-15', 'YYYY-MM-DD'), 'SIM', 3.50, 2);

INSERT INTO PRODUTOS (PRD_ID, NOME, PRD_QD_ESTOQUE, PRD_ESTOQUE_MIM, PRD_DATA_FABRICACAO, PRD_PERECÍVEL, PRD_VALOR, PRD_MARCA_ID) 
VALUES (3, 'Pera', 60, 30, TO_DATE('2023-10-15', 'YYYY-MM-DD'), 'SIM', 4.00, 3);

INSERT INTO PRODUTOS (PRD_ID, NOME, PRD_QD_ESTOQUE, PRD_ESTOQUE_MIM, PRD_DATA_FABRICACAO, PRD_PERECÍVEL, PRD_VALOR, PRD_MARCA_ID) 
VALUES (4, 'Laranja', 90, 50, TO_DATE('2023-10-15', 'YYYY-MM-DD'), 'SIM', 2.75, 4);

INSERT INTO PRODUTOS (PRD_ID, NOME, PRD_QD_ESTOQUE, PRD_ESTOQUE_MIM, PRD_PERECÍVEL, PRD_VALOR, PRD_MARCA_ID) 
VALUES (5, 'Sabonete', 200, 100, 'NÃO', 2.50, 5);

INSERT INTO PRODUTOS (PRD_ID, NOME, PRD_QD_ESTOQUE, PRD_ESTOQUE_MIM, PRD_PERECÍVEL, PRD_VALOR, PRD_MARCA_ID) 
VALUES (6, 'Caneta', 150, 50, 'NÃO', 1.00, 6);

commit;



CREATE TABLE FORNECEDORES (
FRN_ID NUMBER PRIMARY KEY ,
FRN_NOME VARCHAR(50),
FRN_EMAIL VARCHAR(50)
);

INSERT INTO FORNECEDORES (FRN_ID, FRN_NOME , FRN_EMAIL) VALUES( 1 , 'Joao_Fornecedor' , 'JoaoFornecedor@gmail.com');
INSERT INTO FORNECEDORES (FRN_ID, FRN_NOME , FRN_EMAIL) VALUES( 2 , 'Lucas_Fornecedor' , 'LucasFornecedor@gmail.com');
INSERT INTO FORNECEDORES (FRN_ID, FRN_NOME , FRN_EMAIL) VALUES( 3 , 'Cleber_Fornecedor' , 'CleberFornecedor@gmail.com');
commit;

CREATE TABLE PRODUTO_FORNECEDOR (
  PF_PROD_ID NUMBER,
  PF_FORN_ID NUMBER,
  PRIMARY KEY (PF_PROD_ID, PF_FORN_ID),
  FOREIGN KEY (PF_PROD_ID) REFERENCES PRODUTOS (PRD_ID),
  FOREIGN KEY (PF_FORN_ID) REFERENCES FORNECEDORES (FRN_ID)
);
commit;

-- EXECUÇÃO DOS ITENS ABAIXO:


CREATE VIEW ProdutosComMarcas AS
SELECT P.*, M.NOME AS NOME_DA_MARCA
FROM PRODUTOS P
INNER JOIN MARCAS M ON P.PRD_MARCA_ID = M.MRC_ID;
-- mostra todos os produtos e suas respectivas marcas

CREATE  VIEW ProdutosComFornecedores AS
SELECT P.*, F.FRN_NOME AS NOME_DO_FORNECEDOR
FROM PRODUTOS P
INNER JOIN FORNECEDORES F ON P.PRD_ID = F.FRN_ID;
-- mostra todos os produtos e seus respectivos fornecedores

CREATE  VIEW ProdutosComFornecedoresEMarcas AS
SELECT P.*, M.NOME AS NOME_DA_MARCA, F.FRN_NOME AS NOME_DO_FORNECEDOR
FROM PRODUTOS P
INNER JOIN MARCAS M ON P.PRD_MARCA_ID = M.MRC_ID
INNER JOIN PRODUTO_FORNECEDOR PF ON P.PRD_ID = PF.PF_PROD_ID
INNER JOIN FORNECEDORES F ON PF.PF_FORN_ID = F.FRN_ID;
--  mostra todos os produtos e seus respectivos fornecedores e marcas

CREATE  VIEW ProdutosComEstoqueAbaixoMinimo AS
SELECT *
FROM PRODUTOS
WHERE PRD_QD_ESTOQUE < PRD_ESTOQUE_MIM;
-- mostra todos os produtos com estoque abaixo do mínimo

ALTER TABLE PRODUTOS
ADD PRD_DATA_VALIDADE DATE;
-- Inserção do campo de data de validade

INSERT INTO PRODUTOS (PRD_ID, NOME, PRD_QD_ESTOQUE, PRD_ESTOQUE_MIM, PRD_DATA_FABRICACAO, PRD_PERECÍVEL, PRD_VALOR, PRD_MARCA_ID, PRD_DATA_VALIDADE)
VALUES (7, 'Leite', 50, 20, TO_DATE('2023-10-15', 'YYYY-MM-DD'), 'SIM', 2.00, 'Molico', TO_DATE('2023-12-31', 'YYYY-MM-DD'));

INSERT INTO PRODUTOS (PRD_ID, NOME, PRD_QD_ESTOQUE, PRD_ESTOQUE_MIM, PRD_DATA_FABRICACAO, PRD_PERECÍVEL, PRD_VALOR, PRD_MARCA_ID, PRD_DATA_VALIDADE)
VALUES (8, 'Iogurte', 60, 30, TO_DATE('2023-10-15', 'YYYY-MM-DD'), 'SIM', 1.50, 'Danone', TO_DATE('2023-11-30', 'YYYY-MM-DD'));
-- Novos dados com o campo de data de validade

CREATE  VIEW ProdutosComValidadeVencida AS
SELECT *
FROM PRODUTOS
WHERE PRD_DATA_VALIDADE < SYSDATE;
-- mostra todos os produtos e suas respectivas marcas com validade vencida

SELECT *
FROM PRODUTOS
WHERE PRD_VALOR > (SELECT AVG(PRD_VALOR) FROM PRODUTOS);
--  produtos com preço acima da média
